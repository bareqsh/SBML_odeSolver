- example for UsrDefFnct: 
	- interpolation from external data file
	- callBack Fnct

* general accuracy / performance:
        * adapt printout accuracy to CVODE errors
	* check usage of double, float, long float etc.
	* choose CVODE error tolerances automatically for each ODE??
	* choose other solvers from the CVODE package

* batchIntegrator:
	* change parameter in CvodeData, 
	  don't construct ODEs twice (use ODE SBML model, see below)

	  
* Constants, Parameter, Assignment Rule and 
  Function Definition Replacement:
  	* should be separate
	* implement in evaulate/differentiateAST
	* allow online change of parameters (e.g. for inverse methods)

* transfer to SUNDIALS
	* CVODES for sensitivity analysis
	* use of parallel capabilities
	* KINSOL for steady state detection
	* daeSolver IDA

* eventDetector:
	* integrate from last to current timestep, until trigger < CVODE ERROR
	* use combination of interpolation and exact integration
	  to event trigger

* online communication
	* use callback and user-defined-functions
	  for communication with other tools/solver 
	  (e.g. stochastic)

* compilation:
	* use TCC runtime compilation of CVODE code

* SBW: write interface function

* BioUML: explore interface possibility

* command-line and interactive usage
	* change visualization to GNUPLOT (3D!)
	* bioLog_resultVisualizer: ...
